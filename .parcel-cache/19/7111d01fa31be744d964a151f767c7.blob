{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-503e1bbd46072f4a0e4af4a68da0df28.js","app.ts","core/engine.ts","core/gl/gl.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","core/gl/glBuffer.ts","core/gl/shader.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d751713988987e9331980363e24189ce\";module.bundle.HMR_BUNDLE_ID = \"4768f49e813a4495b1920e1aff77a11e\";// @flow\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\n\nvar OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function(fn) {\n      this._acceptCallbacks.push(fn || function() {});\n    },\n    dispose: function(fn) {\n      this._disposeCallbacks.push(fn);\n    },\n  };\n  module.bundle.hotData = undefined;\n}\nmodule.bundle.Module = Module;\n\nvar checkedAssets /*: {|[string]: boolean|} */,\n  acceptedAssets /*: {|[string]: boolean|} */,\n  assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return (\n    HMR_HOST ||\n    (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost')\n  );\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol =\n    HMR_SECURE ||\n    (location.protocol == 'https:' &&\n      !/localhost|127.0.0.1|0.0.0.0/.test(hostname))\n      ? 'wss'\n      : 'ws';\n  var ws = new WebSocket(\n    protocol + '://' + hostname + (port ? ':' + port : '') + '/',\n  );\n  // $FlowFixMe\n  ws.onmessage = function(event /*: {data: string, ...} */) {\n    checkedAssets = ({} /*: {|[string]: boolean|} */);\n    acceptedAssets = ({} /*: {|[string]: boolean|} */);\n    assetsToAccept = [];\n\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      removeErrorOverlay();\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      var handled = false;\n      assets.forEach(asset => {\n        var didAccept =\n          asset.type === 'css' ||\n          (asset.type === 'js' &&\n            hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle));\n        if (didAccept) {\n          handled = true;\n        }\n      });\n\n      if (handled) {\n        console.clear();\n\n        assets.forEach(function(asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe\n          ? ansiDiagnostic.codeframe\n          : ansiDiagnostic.stack;\n\n        console.error(\n          '🚨 [parcel]: ' +\n            ansiDiagnostic.message +\n            '\\n' +\n            stack +\n            '\\n\\n' +\n            ansiDiagnostic.hints.join('\\n'),\n        );\n      }\n\n      // Render the fancy html overlay\n      removeErrorOverlay();\n      var overlay = createErrorOverlay(data.diagnostics.html);\n      // $FlowFixMe\n      document.body.appendChild(overlay);\n    }\n  };\n  ws.onerror = function(e) {\n    console.error(e.message);\n  };\n  ws.onclose = function(e) {\n    if (process.env.PARCEL_BUILD_ENV !== 'test') {\n      console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  let errorHTML =\n    '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>\n          ${stack}\n        </pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>' + hint + '</div>').join('')}\n        </div>\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n\n  overlay.innerHTML = errorHTML;\n\n  return overlay;\n}\n\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function() {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute(\n    'href',\n    // $FlowFixMe\n    link.getAttribute('href').split('?')[0] + '?' + Date.now(),\n  );\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function() {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer =\n        hostname === 'localhost'\n          ? new RegExp(\n              '^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort(),\n            ).test(href)\n          : href.indexOf(hostname + ':' + getPort());\n      var absolute =\n        /^https?:\\/\\//i.test(href) &&\n        href.indexOf(window.location.origin) !== 0 &&\n        !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n    return;\n  }\n\n  let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n  if (deps) {\n    var fn = new Function('require', 'module', 'exports', asset.output);\n    modules[asset.id] = [fn, deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(\n  bundle /*: ParcelRequire */,\n  id /*: string */,\n  depsByBundle /*: ?{ [string]: { [string]: string } }*/,\n) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(module.bundle.root, id).some(function(v) {\n    return hmrAcceptCheck(v[0], v[1], null);\n  });\n}\n\nfunction hmrAcceptRun(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function(cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function(cb) {\n      var assetsToAlsoAccept = cb(function() {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n  acceptedAssets[id] = true;\n}\n","import { Engine } from \"./core/engine\";\n\nconst engine: Engine = new Engine();\n\n// The main entry point for the app\nwindow.onload = function () {\n    engine.start();\n};\n\nwindow.onresize = function () {\n    engine.resize();\n};\n","import { gl, GLUtilities } from \"./gl/gl\";\nimport { AttributeInfo, GlBuffer } from \"./gl/glBuffer\";\nimport { Shader } from \"./gl/shader\";\n\nexport class Engine {\n    private _canvas: HTMLCanvasElement | undefined;\n    private _shader: Shader | undefined;\n\n    private _buffer: GlBuffer | undefined;\n\n    /**\n     * Creates a new Engine\n     */\n    public constructor() {}\n\n    /**\n     * Start up the Engine\n     */\n    public start(): void {\n        this._canvas = GLUtilities.initialize();\n        gl.clearColor(0, 0, 0, 1);\n\n        this.loadShaders();\n        this._shader?.use();\n\n        this.createBuffer();\n\n        this.resize();\n        this.loop();\n    }\n\n    /**\n     * Resizes the canvas to fit the window\n     */\n    public resize(): void {\n        if (this._canvas) {\n            this._canvas.width = window.innerWidth;\n            this._canvas.height = window.innerHeight;\n\n            gl.viewport(0, 0, this._canvas.width, this._canvas.height);\n        }\n    }\n\n    private loop(): void {\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        // Set uniforms\n        const colorPosition = this._shader?.getUniformLocation(\"u_color\")!!;\n        gl.uniform4f(colorPosition, 1, 0.5, 0, 1);\n\n        this._buffer?.bind();\n        this._buffer?.draw();\n\n        requestAnimationFrame(this.loop.bind(this));\n    }\n\n    private createBuffer(): void {\n        this._buffer = new GlBuffer(3);\n\n        const positionAttribute = new AttributeInfo();\n        positionAttribute.location = this._shader?.getAttributeLocation(\n            \"a_position\"\n        )!!;\n        positionAttribute.offset = 0;\n        positionAttribute.size = 3;\n        this._buffer.addAttributeLocation(positionAttribute);\n\n        // prettier-ignore\n        const vertices = [\n        //  x  y  z\n            0, 0, 0,\n            0, 0.5, 0,\n            0.5, 0.5, 0\n        ];\n\n        this._buffer.pushBackData(vertices);\n        this._buffer.upload();\n        this._buffer.unbind();\n    }\n\n    private loadShaders(): void {\n        const vertexShaderSource = `\n        attribute vec3 a_position;\n\n        void main() {\n            gl_Position = vec4(a_position, 1.0);\n        }`;\n\n        const fragmentShaderSource = `\n        precision mediump float;\n\n        uniform vec4 u_color;\n\n        void main() {\n            gl_FragColor = u_color;\n        }\n        `;\n\n        this._shader = new Shader(\n            \"basic\",\n            vertexShaderSource,\n            fragmentShaderSource\n        );\n    }\n}\n","/**\n * The WebGL rendering context\n */\nexport let gl: WebGL2RenderingContext;\n\n/**\n * Responsible for setting up a WebGL renderer\n */\nexport class GLUtilities {\n    /**\n     * Initializes WebGL, optionally using the canvas element id provided\n     * @param elementId The Id of the canvas element\n     */\n    public static initialize(elementId?: string): HTMLCanvasElement {\n        let canvas: HTMLCanvasElement;\n\n        if (elementId) {\n            canvas = document.getElementById(elementId) as HTMLCanvasElement;\n            if (!canvas)\n                throw new Error(\n                    `Cannot find a canvas element named ${elementId}`\n                );\n        } else {\n            canvas = document.createElement(\"canvas\") as HTMLCanvasElement;\n            document.body.appendChild(canvas);\n        }\n\n        gl = canvas.getContext(\"webgl2\") as WebGL2RenderingContext;\n        if (!gl) throw new Error(\"Unable to initialize WebGL\");\n\n        return canvas;\n    }\n}\n","exports.interopDefault = function(a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function(source, dest) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    // Skip duplicate re-exports when they have the same value.\n    if (key in dest && dest[key] === source[key]) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function(dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import { gl } from \"./gl\";\n\n/**\n * Represents the information needed for a GLBuffer attribute.\n */\nexport class AttributeInfo {\n    /**\n     *  The location of the attribute.\n     */\n    public location: number | undefined;\n\n    /**\n     * The size (number of elements) in the attribute (i.e Vector3 = 3).\n     */\n    public size: number | undefined;\n\n    /**\n     * The number of elements from the beginning of the Buffer\n     */\n    public offset: number | undefined;\n}\n\n/**\n * Represents a WebGL Buffer\n */\nexport class GlBuffer {\n    private _hasAttributeLocation: boolean = false;\n    private _elementSize: number;\n    private _stride: number;\n    private _buffer: WebGLBuffer;\n\n    private _targetBufferType: number;\n    private _dataType: number;\n    private _mode: number;\n    private _typeSize: number;\n\n    private _data: number[] = [];\n    private _attributes: AttributeInfo[] = [];\n\n    /**\n     * Creates a new Gl Buffer\n     * @param elementSize The size of each element in the buffer\n     * @param dataType The data type of the buffer. Default: `gl.FLOAT`\n     * @param targetBufferType The buffer target type. Can be either `gl.ARRAY_BUFFER` or `gl.ELEMENT_ARRAY_BUFFER`. Default: `gl.ARRAY_BUFFER`\n     * @param mode The drawing mode of this buffer. (i.e. `gl.TRIANGLES` or `gl.LINES`). Defaukt: `gl.TRIANGLES`\n     */\n    public constructor(\n        elementSize: number,\n        dataType: number = gl.FLOAT,\n        targetBufferType: number = gl.ARRAY_BUFFER,\n        mode: number = gl.TRIANGLES\n    ) {\n        this._elementSize = elementSize;\n        this._dataType = dataType;\n        this._targetBufferType = targetBufferType;\n        this._mode = mode;\n\n        // Determine byte size\n        switch (this._dataType) {\n            case gl.FLOAT:\n            case gl.INT:\n            case gl.UNSIGNED_INT:\n                this._typeSize = 4;\n                break;\n\n            case gl.SHORT:\n            case gl.UNSIGNED_SHORT:\n                this._typeSize = 2;\n                break;\n\n            case gl.BYTE:\n            case gl.UNSIGNED_BYTE:\n                this._typeSize = 1;\n                break;\n\n            default:\n                throw new Error(`Unrecognized data type \"${dataType}\"`);\n        }\n\n        this._stride = this._elementSize * this._typeSize;\n        this._buffer = gl.createBuffer()!!;\n    }\n\n    /**\n     * Destroy the Buffer\n     */\n    public destroy(): void {\n        gl.deleteBuffer(this._buffer);\n    }\n\n    /**\n     * Bind the Buffer\n     * @param noramlized Indicates if the data should be normalized. Default: `false`\n     */\n    public bind(noramlized: boolean = false): void {\n        gl.bindBuffer(this._targetBufferType, this._buffer);\n\n        if (this._hasAttributeLocation) {\n            for (let it of this._attributes) {\n                gl.vertexAttribPointer(\n                    it.location!!,\n                    it.size!!,\n                    this._dataType,\n                    noramlized,\n                    this._stride,\n                    it.offset!! * this._typeSize\n                );\n                gl.enableVertexAttribArray(it.location!!);\n            }\n        }\n    }\n\n    /**\n     * Unbind the Buffer\n     */\n    public unbind(): void {\n        for (let it of this._attributes) {\n            gl.disableVertexAttribArray(it.location!!);\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffer);\n    }\n\n    /**\n     * Adds an attribute with the provided information to the Buffer\n     * @param info The information to add\n     */\n    public addAttributeLocation(info: AttributeInfo): void {\n        this._hasAttributeLocation = true;\n        this._attributes.push(info);\n    }\n\n    /**\n     * Add data to the Buffer\n     * @param data The data to add\n     */\n    public pushBackData(data: number[]): void {\n        for (const d of data) {\n            this._data.push(d);\n        }\n    }\n\n    /**\n     * Upload the Buffer data to the GPU\n     */\n    public upload(): void {\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffer);\n\n        let bufferData: ArrayBuffer;\n        switch (this._dataType) {\n            case gl.FLOAT:\n                bufferData = new Float32Array(this._data);\n                break;\n\n            case gl.INT:\n                bufferData = new Int32Array(this._data);\n                break;\n\n            case gl.UNSIGNED_INT:\n                bufferData = new Uint32Array(this._data);\n                break;\n\n            case gl.SHORT:\n                bufferData = new Int16Array(this._data);\n                break;\n\n            case gl.UNSIGNED_SHORT:\n                bufferData = new Uint16Array(this._data);\n                break;\n\n            case gl.BYTE:\n                bufferData = new Int8Array(this._data);\n                break;\n\n            case gl.UNSIGNED_BYTE:\n                bufferData = new Uint8Array(this._data);\n                break;\n        }\n\n        gl.bufferData(this._targetBufferType, bufferData!!, gl.STATIC_DRAW);\n    }\n\n    /**\n     * Draw the Buffer\n     */\n    public draw(): void {\n        if (this._targetBufferType === gl.ARRAY_BUFFER) {\n            gl.drawArrays(this._mode, 0, this._data.length / this._elementSize);\n        } else if (this._targetBufferType === gl.ELEMENT_ARRAY_BUFFER) {\n            gl.drawElements(this._mode, this._data.length, this._dataType, 0);\n        }\n    }\n}\n","import { gl } from \"./gl\";\n\n/**\n * Represents a WebGL Shader\n */\nexport class Shader {\n    private _name: string;\n    private _program: WebGLProgram | undefined;\n    private _attributes: { [name: string]: number } = {};\n    private _uniforms: { [name: string]: WebGLUniformLocation } = {};\n\n    /**\n     * Creates a new shader\n     * @param name The name of the shader\n     * @param vertexSource The source of the vertex shader\n     * @param fragmentSource The source of the fragment shader\n     */\n    public constructor(\n        name: string,\n        vertexSource: string,\n        fragmentSource: string\n    ) {\n        this._name = name;\n        const vertexShader = this.loadShader(vertexSource, gl.VERTEX_SHADER);\n        const fragmentShader = this.loadShader(\n            fragmentSource,\n            gl.FRAGMENT_SHADER\n        );\n\n        this.createProgram(vertexShader, fragmentShader);\n\n        this.detectAtttributes();\n        this.detectUniforms();\n    }\n\n    /**\n     * The name of the shader\n     */\n    public get name(): string {\n        return this._name;\n    }\n\n    /**\n     * Gets the location of an attribute with the specified name\n     * @param name The name of the attribute\n     */\n    public getAttributeLocation(name: string): number {\n        if (this._attributes[name] === undefined)\n            throw new Error(\n                `Unable to find an attribute named \"${name}\" in shader \"${this._name}\"`\n            );\n\n        return this._attributes[name];\n    }\n\n    /**\n     * Gets the location of an uniform with the specified name\n     * @param name The name of the uniform\n     */\n    public getUniformLocation(name: string): WebGLUniformLocation {\n        if (this._uniforms[name] === undefined)\n            throw new Error(\n                `Unable to find an uniform named \"${name}\" in shader \"${this._name}\"`\n            );\n\n        return this._uniforms[name];\n    }\n\n    /**\n     * Use this shader\n     */\n    public use(): void {\n        gl.useProgram(this._program!!);\n    }\n\n    private loadShader(source: string, shaderType: number): WebGLShader {\n        let shader: WebGLShader = gl.createShader(shaderType) as WebGLShader;\n\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        const error = gl.getShaderInfoLog(shader);\n        if (error)\n            throw new Error(`Error compiling shader \"${this._name}\": ${error}`);\n\n        return shader;\n    }\n\n    private createProgram(\n        vertexShader: WebGLShader,\n        fragmentShader: WebGLShader\n    ): void {\n        this._program = gl.createProgram() as WebGLProgram;\n\n        gl.attachShader(this._program, vertexShader);\n        gl.attachShader(this._program, fragmentShader);\n\n        gl.linkProgram(this._program);\n\n        const error = gl.getProgramInfoLog(this._program);\n        if (error)\n            throw new Error(`Error linking shader \"${this._name}\": ${error}`);\n    }\n\n    private detectAtttributes(): void {\n        const attributeCount = gl.getProgramParameter(\n            this._program!!,\n            gl.ACTIVE_ATTRIBUTES\n        );\n        for (let i = 0; i < attributeCount; i++) {\n            const info: WebGLActiveInfo | null = gl.getActiveAttrib(\n                this._program!!,\n                i\n            );\n            if (!info) break;\n\n            this._attributes[info.name] = gl.getAttribLocation(\n                this._program!!,\n                info.name\n            );\n        }\n    }\n\n    private detectUniforms(): void {\n        const uniformCount = gl.getProgramParameter(\n            this._program!!,\n            gl.ACTIVE_UNIFORMS\n        );\n        for (let i = 0; i < uniformCount; i++) {\n            const info: WebGLActiveInfo | null = gl.getActiveUniform(\n                this._program!!,\n                i\n            );\n            if (!info) break;\n\n            this._uniforms[info.name] = gl.getUniformLocation(\n                this._program!!,\n                info.name\n            )!!;\n        }\n    }\n}\n"],"names":[],"version":3,"file":"index.HASH_REF_4768f49e813a4495b1920e1aff77a11e.js.map","sourceRoot":"/__parcel_source_root/"}